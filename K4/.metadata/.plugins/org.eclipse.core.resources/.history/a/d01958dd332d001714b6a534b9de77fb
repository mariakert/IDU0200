package tests;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;

public class Sort {
  private WebDriver driver;
  private String baseUrl;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

  @Before
  public void setUp() throws Exception {
    driver = new FirefoxDriver();
    baseUrl = "https://www.klick.ee/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void testSort() throws Exception {
    driver.get("https://www.klick.ee/");
    driver.findElement(By.linkText("Arvutid")).click();
    driver.findElement(By.linkText("SÃ¼learvutid")).click();
    driver.findElement(By.xpath("//div[@id='left-toolbar']/div[2]/span")).click();
    driver.findElement(By.xpath("//div[@id='left-toolbar']/div[2]/span/span[2]/span/span[3]")).click();
    try {
      assertTrue(Pattern.compile("([A]{0,1}.)").matcher(driver.findElement(By.xpath("//div[@id='products-grid']/div[1]/div/h5/a")).getText()).find());
    } catch (Error e) {
      verificationErrors.append(e.toString());
    }
    driver.findElement(By.xpath("//div[@id='left-toolbar']/div[2]/span")).click();
    driver.findElement(By.xpath("//div[@id='left-toolbar']/div[2]/span/span[2]/span/span[5]")).click();
    String firstItem = driver.findElement(By.xpath("//div[@id='products-grid']/div[1]/div/div[1]/span/span")).getText();
    String secondItem = driver.findElement(By.xpath("//div[@id='products-grid']/div[2]/div/div[1]/span/span")).getText();
	String firstItemPrice = firstItem.split(".")[0];
    // ERROR: Caught exception [ERROR: Unsupported command [getEval | storedVars['firstItem'].split(".")[0]; | ]]
    // ERROR: Caught exception [ERROR: Unsupported command [getEval | storedVars['firstItem'].split(".")[0]; | ]]
    System.out.println(firstItem + " + \" \" + " + firstItemPrice);
    // ERROR: Caught exception [ERROR: Unsupported command [getEval | parseInt(storedVars['firstItemPrice']) >= parseInt(storedVars['secondItemPrice']) | ]]
    driver.findElement(By.xpath("//div[@id='left-toolbar']/div[2]/span")).click();
    driver.findElement(By.xpath("//div[@id='left-toolbar']/div[2]/span/span[2]/span/span[4]")).click();
    String firstItem = driver.findElement(By.xpath("//div[@id='products-grid']/div[1]/div/div[1]/span/span")).getText();
    String secondItem = driver.findElement(By.xpath("//div[@id='products-grid']/div[2]/div/div[1]/span/span")).getText();
    // ERROR: Caught exception [ERROR: Unsupported command [getEval | storedVars['firstItem'].split(".")[0]; | ]]
    // ERROR: Caught exception [ERROR: Unsupported command [getEval | storedVars['firstItem'].split(".")[0]; | ]]
    System.out.println(firstItem + " + \" \" + " + firstItemPrice);
    // ERROR: Caught exception [ERROR: Unsupported command [getEval | parseInt(storedVars['firstItemPrice']) <= parseInt(storedVars['secondItemPrice']) | ]]
  }

  @After
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
